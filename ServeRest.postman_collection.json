{
	"info": {
		"_postman_id": "9e8d63d4-8a7b-4a2f-a321-ee6f269cc643",
		"name": "ServerRest /usuarios",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "POST - Cadastrar usuário",
			"item": [
				{
					"name": "Cadastro com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData\r",
									"var ambiente = JSON.parse(responseBody);\r",
									"pm.environment.set(\"_id\", ambiente._id);\r",
									"\r",
									"pm.test('Validar status code igual a 201', function(){\r",
									"    pm.response.to.have.status(201)\r",
									"})\r",
									"\r",
									"pm.test('Validar retorno de mensagem', function(){\r",
									"    jasonData = pm.response.json().message\r",
									"    pm.expect(jasonData, \"id não retornado\").to.eql(\"Cadastro realizado com sucesso\")\r",
									"})\r",
									"\r",
									"pm.test('Validar retorno de client id', function(){\r",
									"    jasonData = pm.response.json()._id\r",
									"    pm.expect(jasonData, \"id não retornado\").not.undefined\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Sabrina Teste\",\r\n  \"email\": \"SabrinaTeste@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro com email já cadastrado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData\r",
									"\r",
									"pm.test('Validar status code igual a 400', function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test('Validar retorno de mensagem', function(){\r",
									"    jasonData = pm.response.json().message\r",
									"    pm.expect(jasonData, \"id não retornado\").to.eql(\"Este email já está sendo usado\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"Fulano da Silva\",\r\n  \"email\": \"beltrano@qa.com.br\",\r\n  \"password\": \"teste\",\r\n  \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro sem email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData\r",
									"\r",
									"pm.test('Validar status code igual a 400', function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test('Validar retorno de mensagem', function(){\r",
									"    jasonData = pm.response.json().email\r",
									"    pm.expect(jasonData, \"id não retornado\").to.eql(\"email é obrigatório\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nome\": \"Fulano\",\r\n    \"password\": \"teste\",\r\n    \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro sem nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jasonData\r",
									"\r",
									"pm.test('Validar status code igual a 400', function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									"pm.test('Validar retorno de mensagem', function(){\r",
									"    jasonData = pm.response.json().nome\r",
									"    pm.expect(jasonData, \"id não retornado\").to.eql(\"nome é obrigatório\")\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"beltrano@qa.com.br\",\r\n    \"password\": \"teste\",\r\n    \"administrador\": \"true\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/usuarios",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET - Buscar usuários por ID",
			"item": []
		},
		{
			"name": "GET - Listar usuários cadstrados",
			"item": [
				{
					"name": "Listar usuários cadastrados",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://serverest.dev/usuarios",
							"protocol": "https",
							"host": [
								"serverest",
								"dev"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT - Edtar usuário",
			"item": []
		},
		{
			"name": "DEL - Excluir usuário",
			"item": [
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/usuarios/{{_id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"usuarios",
								"{{_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}